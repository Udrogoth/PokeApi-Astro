---
import type { GetStaticPaths } from "astro";
import Main from "../../layouts/main.astro";
import PokemonCard from "@components/pokemons/PokemonCard.astro";
import type { PokemonListResponse } from "../../interfaces/pokemon-list.response";
import Title from "@components/shared/Title.astro";

import { Icon } from "astro-icon/components";

export const getStaticPaths = (async () => {
    const resp = await fetch("https://pokeapi.co/api/v2/pokemon?limit=151");
    const { results } = (await resp.json()) as PokemonListResponse;

    return results.map(({ name, url }) => ({
        params: { name },
        props: { name, url },
    }));
    // return [
    //     {
    //         params: { name: "bulbasaur" },
    //         props: {
    //             name: "bulbasaur",
    //             url: `https://pokeapi.co/api/v2/pokemon/1/`,
    //         },
    //     },
    // ];
}) satisfies GetStaticPaths;

const { name } = Astro.params;
const { url } = Astro.props;

const id = url.split("/").at(-2);
const AudioUrl = `https://raw.githubusercontent.com/PokeAPI/cries/main/cries/pokemon/latest/${id}.ogg`;
const urlImg = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`;
---

<Main
    title=`Pokémon - #${id} ${name}`
    description={`Informacion sobre el Pokémon ${name}`}
    image={urlImg}
>
    <section>
        <div class="h-2">
            <button
                class="hover:border rounded-sm pl-2 pr-2 hover:bg-slate-600"
                onclick="history.back()">Regresar</button
            >
        </div>

        <div class="flex flex-row justify-center items-center">
            <Title>{name}</Title>
            <button
                id="btn_favorite"
                class="ml-2 hover:animate-pulse"
                data-name={name}
                data-id={id}
            >
                <Icon data-outline name="heart-outline" size={50} color="red" />
                <Icon
                    data-full
                    class="hidden"
                    name="heart-full"
                    size={50}
                    color="red"
                />
            </button>
        </div>

        <div class="flex flex-col justify-center items-center">
            <PokemonCard name={name} , url={url} isBig />
            <audio controls>
                <source src={AudioUrl} />
            </audio>
        </div>
    </section>
</Main>

<script>
    import type {FavoritePokemon} from '../../interfaces/Favorites-pokemons'
    // interface FavoritePokemon {
    //     name: string;
    //     id: number;
    // }
    const handlePageLoad = () => {
        let favoritePokemons: FavoritePokemon[] = JSON.parse(
            localStorage.getItem("favorites") ?? "[]",
        );

        const btnFavorite = document.querySelector(
            "#btn_favorite",
        ) as HTMLButtonElement;

        if (!btnFavorite) return;

        const name = btnFavorite.dataset.name ?? "";
        const id = btnFavorite.dataset.id ?? "";
      
        const isFavorite = favoritePokemons.some(
                (fav) => fav.name === name,
            );


        const heartOutline = btnFavorite.querySelector(
            "[data-outline]",
        ) as HTMLElement;

        const heartFull = btnFavorite.querySelector(
            "[data-full]",
        ) as HTMLElement;

        if(isFavorite){
            heartOutline.classList.add('hidden')
            heartFull.classList.remove('hidden')
        }
      




        const toggleFavorite = () => {
            const isFavorite = favoritePokemons.some(
                (fav) => fav.name === name,
            );
            if (isFavorite) {
                favoritePokemons = favoritePokemons.filter(
                    (fav) => fav.name !== name,
                );
            } else {
                favoritePokemons.push({
                    id: +id,
                    name,
                });
            }
           
            localStorage.setItem("favorites", JSON.stringify(favoritePokemons));
        };

        btnFavorite.addEventListener("click", () => {
            heartOutline.classList.toggle("hidden");
            heartFull.classList.toggle("hidden");
            toggleFavorite();
        });
    };
    document.addEventListener("astro:page-load", handlePageLoad);
</script>
